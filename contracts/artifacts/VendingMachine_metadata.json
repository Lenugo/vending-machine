{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "addFunds",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_purchaseIndex",
						"type": "uint256"
					}
				],
				"name": "consumePurchase",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllProducts",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "code",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							}
						],
						"internalType": "struct VendingMachine.Product[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_buyer",
						"type": "address"
					}
				],
				"name": "getAvailablePurchases",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "buyer",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "productId",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "enum VendingMachine.PurchaseStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct VendingMachine.Purchase[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_buyer",
						"type": "address"
					}
				],
				"name": "getConsumedPurchases",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "buyer",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "productId",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "enum VendingMachine.PurchaseStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct VendingMachine.Purchase[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_productId",
						"type": "string"
					}
				],
				"name": "getProductByCode",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "code",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							}
						],
						"internalType": "struct VendingMachine.Product",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_buyer",
						"type": "address"
					}
				],
				"name": "getPurchases",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "buyer",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "productId",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "enum VendingMachine.PurchaseStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct VendingMachine.Purchase[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_productId",
						"type": "string"
					}
				],
				"name": "purchaseProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/VendingMachine.sol": "VendingMachine"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/VendingMachine.sol": {
			"keccak256": "0xd6437379e7c20b8dc894250cfb6197e7dc8deb3a2198e9695b95059fea35a80a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ed43a03eada6c00b39a9e7839043386c9cb694c25bffe1cfb0c000e95b521490",
				"dweb:/ipfs/QmPzvdWvewrD7z3YXpHqxUEw1MtQDmmxiDdQCARbbS46Wt"
			]
		}
	},
	"version": 1
}